variables:
    GIT_STRATEGY: fetch
    GIT_CHECKOUT: "true"
    GIT_CLEAN_FLAGS: -f -d -x

stages:
    - venv
    - build
    - test
    - integration-test

before_script:
  - $venvPath = "$env:temp/venv/$($env:CI_PROJECT_NAME)"
  - $rootPath = "$env:path/"
  - >
    function Write-PythonPath {
        $pythonPath = $(Get-Command python | % source)
        Write-Output "The python path is at: '$pythonPath'"
    }
  - >
    function Test-CreateVenv {
        if (-not (Test-Path $VenvPath)) {
            Write-Host "`nCannot found venv at $VenvPath, need to create venv."
            return $True
        }

        Write-Host "`nNo need to create venv."
        return $False
    }
  - >
    function Enable-Venv {
        param($VenvPath)

        Invoke-Expression (Join-Path $VenvPath "Scripts/activate.ps1")
        Write-Host "venv enabled at: $VenvPath"
        Write-PythonPath
    }
  - >
    function Create-Venv {
        param($VenvPath)

        Write-Output "Creating venv at $venvPath ."
        py -m venv $VenvPath
        Write-Output "venv created at $venvPath ."
    }
  - >
    function Install-PythonRequirements {
        param($VenvPath)

        Enable-Venv $VenvPath
        py -m pip install -U pip setuptools wheel
        cd RTF/APP
        pip install -e .
    }
  - >
    function Remove-Venv {
        param($VenvPath)

        if (Test-Path $VenvPath) {
            Remove-Item $VenvPath -Recurse -Force
            Write-Host "venv removed from: $VenvPath"
        } else {
            Write-Host "venv not found at: $VenvPath"
        }
    }


  - Get-Location

venv:
  stage: venv
  script:
    - >
      if (Test-CreateVenv $venvPath) {
          Remove-Venv $venvPath
          Create-Venv $venvPath
      }

      Install-PythonRequirements $venvPath

build_pr:
   stage: build
   script:
    - Enable-Venv $venvPath
    - cd RTF\UI\angular\mini-sct-gui
    - npm i @angular/core
    - npm run ng build

pytest:
   stage: test
   script:
    - Enable-Venv $venvPath
    - cd RTF\APP
    - python -m pytest --cov=. tests

pytest-integration:
   stage: integration-test
   script:
    - Enable-Venv $venvPath
    # HACK: manually create directory for http server:
    # the files are currently not used, but the directory
    # must exist or master will not start.
    # TODO: eventually we need to fix this CI script to
    # preserve the anular build output between jobs
    - mkdir RTF\UI\angular\mini-sct-gui\dist\mini-sct-gui
    - cd RTF\APP
    - $env:ATE_INTEGRATION_TESTENV_BROKER_HOST='10.9.1.6'
    # TODO: use --cov-append to combine coverage stats from test and integration-test? or simply don't split these into two jobs anymore?
    - python -m pytest -v -o log_cli=true --cov=. integration_tests
